name: Build Flutter APK

on:
  push:
    branches: [ "master" ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      CI: true
      KEYSTORE_BASE64: ${{ secrets.KEYSTORE_BASE64 }}
      KEYSTORE_STORE_PASSWORD: ${{ secrets.KEYSTORE_STORE_PASSWORD }}
      KEYSTORE_KEY_PASSWORD: ${{ secrets.KEYSTORE_KEY_PASSWORD }}
      KEYSTORE_KEY_ALIAS: ${{ secrets.KEYSTORE_KEY_ALIAS }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        

      - name: Cache Pub packages
        uses: actions/cache@v3
        with:
          path: ~/.pub-cache
          key: ${{ runner.os }}-pub-${{ hashFiles('**/pubspec.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pub-

      - name: Cache Gradle
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles("**/*.gradle*", "**/gradle-wrapper.properties") }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: "stable"

      - name: Install dependencies
        run: flutter pub get

      # (اختياري لكن مفيد) قبول رخص Android SDK إذا لزم
      - name: Accept Android SDK licenses
        run: yes | sdkmanager --licenses

      # Optional: decode keystore from secrets (see notes below)
      - name: Decode keystore (if provided)
        if: env.KEYSTORE_BASE64 != ""
        run: |
          mkdir -p android/app
          echo "${{ secrets.KEYSTORE_BASE64 }}" | base64 --decode > android/app/keystore.jks

      - name: Create android/key.properties (if keystore provided)
        if: env.KEYSTORE_BASE64 != ""
        run: |
          cat > android/key.properties <<EOF
          storePassword=${{ secrets.KEYSTORE_STORE_PASSWORD }}
          keyPassword=${{ secrets.KEYSTORE_KEY_PASSWORD }}
          keyAlias=${{ secrets.KEYSTORE_KEY_ALIAS }}
          storeFile=keystore.jks
          EOF

      - name: Build APK (release)
        run: flutter build apk --release --no-shrink

      - name: Upload APK artifact
        uses: actions/upload-artifact@v3
        with:
          name: app-release
          path: build/app/outputs/flutter-apk/*.apk


